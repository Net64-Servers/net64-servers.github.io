{"version":3,"sources":["webpack://net64.github.io/./src/components/NewsEntry.tsx","webpack://net64.github.io/./src/templates/blog.tsx"],"names":["StyledNewsEntry","getEmSize","colors","StyledHeader","StyledSubHeader","author","title","date","link","children","timestamp","toLocaleDateString","href","data","slug","markdownRemark","fields","frontmatter","site","siteMetadata","Date","key","renderAst","htmlAst"],"mappings":"6KAMMA,GAAkB,cAAH,mBAAG,CAAH,YACRC,OAAU,IADF,cAETA,OAAU,IAFD,sBAGHC,eAHG,mBAIFD,OAAU,IAJR,uBAKCC,WALD,8BAMUA,eANV,2EAkBfC,GAAe,cAAH,mBAAG,CAAH,yCAGPD,kBAHO,KAMZE,GAAkB,cAAH,mBAAG,CAAH,0BAEVF,eAFU,wBA0BrB,IAb2D,SAAC,GAA4C,IAA1CG,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjFC,EAAYH,EAAKI,qBACvB,OACE,QAACX,EAAD,MACE,QAACG,EAAD,KAAeK,GAAO,aAAGI,KAAMJ,GAAOF,GAAaA,IACnD,QAACF,EAAD,KACGM,EADH,SACoBL,GAEnBI,K,0HCLP,UAlBiE,SAAC,GAAD,IAAGI,EAAH,EAAGA,KAAH,OAC/D,QAAC,IAAD,MACE,QAAC,IAAD,CAAKC,KAAMD,EAAKE,eAAeC,OAAOF,QACtC,QAAC,IAAD,MACE,QAAC,IAAD,MACE,QAAC,IAAD,CACET,OAAQQ,EAAKE,eAAeE,YAAYZ,OACxCC,MAAUO,EAAKK,KAAKC,aAAab,MAA5B,WAA4CO,EAAKE,eAAeE,YAAYX,MACjFC,KAAM,IAAIa,KAAKP,EAAKE,eAAeE,YAAYV,MAC/Cc,IAAQR,EAAKE,eAAeE,YAAYV,KAArC,IAA6CM,EAAKE,eAAeE,YAAYX,QAE/EgB,OAAUT,EAAKE,eAAeQ","file":"component---src-templates-blog-tsx-bbc19f670b920818a01c.js","sourcesContent":["import * as React from 'react'\nimport styled from '@emotion/styled'\n\nimport { getEmSize } from '../styles/mixins'\nimport { colors } from '../styles/variables'\n\nconst StyledNewsEntry = styled.div`\n  padding: ${getEmSize(24)}em;\n  margin: ${getEmSize(32)}rem 0;\n  border-color: ${colors.gray.copy};\n  border-radius: ${getEmSize(12)}em;\n  background-color: ${colors.white};\n  box-shadow: 0 5px 15px 3px ${colors.gray.copy};\n  color: black;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  p:last-child {\n    margin-bottom: 0;\n  }\n`\n\nconst StyledHeader = styled.div`\n  font-size: 2rem;\n  font-weight: bold;\n  color: ${colors.brand.normal};\n`\n\nconst StyledSubHeader = styled.div`\n  font-size: 0.8rem;\n  color: ${colors.gray.dark};\n  margin-bottom: 1rem;\n`\n\ninterface NewsEntryProps {\n  author: string\n  title: string\n  date: Date\n  link?: string\n}\n\nconst NewsEntry: React.FunctionComponent<NewsEntryProps> = ({ author, title, date, link, children }) => {\n  const timestamp = date.toLocaleDateString()\n  return (\n    <StyledNewsEntry>\n      <StyledHeader>{link ? <a href={link}>{title}</a> : title}</StyledHeader>\n      <StyledSubHeader>\n        {timestamp} - by {author}\n      </StyledSubHeader>\n      {children}\n    </StyledNewsEntry>\n  )\n}\n\nexport default NewsEntry\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport SEO from '../components/SEO'\nimport IndexLayout from '../layouts'\nimport { renderAst } from '../utils/rehype'\nimport { FrontmatterBlog } from '../models/Frontmatter'\nimport NewsEntry from '../components/NewsEntry'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n    markdownRemark: {\n      htmlAst: string\n      fields: {\n        slug: string\n      }\n      frontmatter: FrontmatterBlog\n    }\n  }\n}\n\nconst BlogTemplate: React.FunctionComponent<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <SEO slug={data.markdownRemark.fields.slug} />\n    <Page>\n      <Container>\n        <NewsEntry\n          author={data.markdownRemark.frontmatter.author}\n          title={`${data.site.siteMetadata.title} Blog - ${data.markdownRemark.frontmatter.title}`}\n          date={new Date(data.markdownRemark.frontmatter.date)}\n          key={`${data.markdownRemark.frontmatter.date}.${data.markdownRemark.frontmatter.title}`}\n        >\n          {renderAst(data.markdownRemark.htmlAst)}\n        </NewsEntry>\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default BlogTemplate\n\nexport const query = graphql`\n  query BlogTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      htmlAst\n      fields {\n        slug\n      }\n      frontmatter {\n        author\n        title\n        date\n        description\n        keywords\n      }\n    }\n  }\n`\n"],"sourceRoot":""}